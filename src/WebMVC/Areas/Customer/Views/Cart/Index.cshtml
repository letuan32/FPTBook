@model WebMVC.ViewModels.Cart.CartVm

@{
    ViewBag.Title = "Cart";
    Layout = "_Layout";
}

<h2>Shopping Cart</h2>
<section class="h-100" style="background-color: #eee;">
  <div class="container h-100 py-5">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-10">

        <div class="d-flex justify-content-between align-items-center mb-4">
          @* TODO: Sorting *@
          @* <div> *@
          @*   <p class="mb-0"><span class="text-muted">Sort by:</span> <a href="#!" class="text-body">price <i *@
          @*         class="fas fa-angle-down mt-1"></i></a></p> *@
          @* </div> *@
        </div>
        
           @foreach (var item in Model.Items)
                  {
                    <div class="card rounded-3 mb-4">
                      <div class="card-body p-4">
                        <div class="row d-flex justify-content-between align-items-center">
                          <div class="col-md-2 col-lg-2 col-xl-2">
                            <img
                              src="@item.ImageUrl"
                              class="img-fluid rounded-3" alt="@item.Name">
                          </div>
                          <div class="col-md-3 col-lg-3 col-xl-3">
                            <p class="lead fw-normal mb-2">@item.Name</p>
                          </div>
                          <div class="col-md-3 col-lg-3 col-xl-2 d-flex">
                            <button class="btn btn-link px-2"
                                    onclick="this.parentNode.querySelector('input[type=number]').stepDown()">
                              <i class="fas fa-minus"></i>
                            </button>
          
                            <input id="itemQuantity-@item.Id" min="0" name="quantity" value="@item.Quantity" type="number"
                                   oninput="validity.valid||(value='');"
                                   onchange="UpdateCartItem(@item.Id,this.value)"
                                   class="form-control form-control-sm"/>
          
                            <button class="btn btn-link px-2"
                                    onclick="this.parentNode.querySelector('input[type=number]').stepUp()">
                              <i class="fas fa-plus"></i>
                            </button>
                          </div>
                          <div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
                            <h5 class="mb-0">@item.Price VND</h5>
                          </div>
                          <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                            <a href="#!" class="text-danger">
                              <li class="material-icons">
                                delete
                              </li></a>
                          </div>
                        </div>
                      </div>
                    </div>
                  }

      
       
        <div class="card">
          <div class="card-body">
            <a type="button" class="btn btn-warning btn-block btn-lg"
               asp-action="Index",
               asp-controller="Order"
               asp-area="Order"
               >Payment</a>
          </div>
        </div>

      </div>
    </div>
  </div>
</section>

@section Scripts
{
  <script>
   function UpdateCartItem(itemId,quantity) {
     if (quantity<=0)
       {
         alert("Invalid quantity")
         $("#itemQuantity-"+itemId).val(1)
         return
       }
     console.log("oitem: ",itemId)
          console.log("quantity: ",quantity)

          var url = '@Url.Action("UpdateItem", "Cart")'
                $.ajax({
               type: "POST",
               contentType: 'application/json',
               url: url,
               data: JSON.stringify({ Id: itemId, Quantity:quantity}),
               success: () => 
               {
                                console.log("Update cart item")
                                $.ajax({
                                        url: "@Url.Action("RefreshViewComponent", "Cart")",
                                       
                                            method: "GET",
                                            success: function (data) {
                                               $("#cart-navbar-item").html(data) 
                                               location.reload()                                     
                                            }
                                        });
                                    }
               })       
                    }
  </script>
}
