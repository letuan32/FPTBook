@model WebMVC.ViewModels.Books.Responses.BookIndexVm
@{

}


<div class="col-md-12 col-md-push-1">
    <h3 class="text-center">Manage Users</h3>
    <div class="container">
        <div class="row">
            <div class="col-xs-8 col-xs-offset-2">
                <form asp-action="Index" method="get">
                    <div class="col-12 d-flex justify-content-center text-center">
                        <div class="">

                            Find by name: <input type="text" name="SearchString" value="@Model.CurrentSearchString"/>|
                            Filter:
                            <select asp-for="@Model.CurrentCategoryFilter" name="FilterOption" asp-items="@Model.Categories" class="esh-catalog-filter"></select>
                            <button style="margin-bottom:0" type="submit" value="Search" class="btn btn-default">Search</button>
                            <a asp-action="Index" asp-controller="Book" asp-area="StoreOwner">Back to Full List</a>
                        </div>
                    </div>
                </form>
            </div><!-- end col-xs-8 -->
        </div><!-- end row -->
    </div><!-- end container -->
</div><!-- end col-md-9 -->

<div class="table-responsive" style="margin-top: 10vh">
    <table class="table table-image text-center">
        <thead>
        <tr>
            <th class="align-middle" scope="col">
                Image
            </th>
            <th class="align-middle" scope="col">
                <a asp-action="Index"
                   asp-route-sortOption="@Model.NameSortParm"
                   asp-route-FilterOption="@Model.CurrentCategoryFilter"
                   asp-route-currentSearch="@Model.CurrentSearchString">
                    <div class="text-center me-2 d-flex align-items-center justify-content-center">
                        <span class="nav-link-text ms-1">Title </span>
                        <i class="material-icons" style="padding-left: 5px">
                            sort
                        </i>
                    </div>

                </a>
            </th>
            <th class="align-middle" scope="col">
                <a asp-action="Index"
                   asp-route-sortOption="@Model.QuantitySortParm"
                   asp-route-FilterOption="@Model.CurrentCategoryFilter"
                   asp-route-currentSearch="@Model.CurrentSearchString">
                    <div class="text-center me-2 d-flex align-items-center justify-content-center">
                        <span class="nav-link-text ms-1">Quantity </span>
                        <i class="material-icons" style="padding-left: 5px">
                            sort
                        </i>
                    </div>

                </a>
            </th>
            <th class="align-middle" scope="col">
                <a asp-action="Index"
                   asp-route-sortOption="@Model.PriceSortParm"
                   asp-route-FilterOption="@Model.CurrentCategoryFilter"
                   asp-route-currentSearch="@Model.CurrentSearchString">
                    <div class="text-center me-2 d-flex align-items-center justify-content-center">
                        <span class="nav-link-text ms-1">Price </span>
                        <i class="material-icons" style="padding-left: 5px">
                            sort
                        </i>
                    </div>

                </a>
            </th>
            <th class="align-middle" scope="col">
                <a asp-action="Index"
                   asp-route-sortOption="@Model.TotalSalesSortParm"
                   asp-route-FilterOption="@Model.CurrentCategoryFilter"
                   asp-route-currentSearch="@Model.CurrentSearchString">
                    <div class="text-center me-2 d-flex align-items-center justify-content-center">
                        <span class="nav-link-text ms-1">Total Sales </span>
                        <i class="material-icons" style="padding-left: 5px">
                            sort
                        </i>
                    </div>

                </a>
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.BookItems)
        {
            <tr>

                <td class="align-middle">
                    <img width="100" src="@item.ImageUrl" alt="Image"/>
                </td>
                <td class="align-middle">@item.Name</td>
                <td class="align-middle">@item.Quantity</td>
                <td class="align-middle">@item.Price VND</td>
                <td class="align-middle">@item.TotalSales</td>
                <td class="align-middle">
                    <div class="text-center">
                        <a href="#" style="cursor:pointer">
                            <i class=""></i>Button
                        </a>
                        <a href="#" style="cursor:pointer">
                            <i class=""></i>Button
                        </a>
                        <a href="#">
                            <i class=""></i>Button
                        </a>
                    </div>
                </td>
            </tr>
        }

        </tbody>
    </table>
</div>
@{
    var currentPage = Model.PaginationInfo.ActualPage;
}
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item">
        @if (currentPage > 1)
        {
            <a class="page-link"
               asp-area="StoreOwner"
               asp-controller="Book"
               asp-action="Index"
               asp-route-sortOption="@Model.CurrentSort"
               asp-route-pageNumber="@(currentPage - 1)"
               asp-route-CurrentSearch="@Model.CurrentSearchString"
               asp-route-FilterOption="@Model.CurrentCategoryFilter">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        }


        @{
            const int pageLeft = 2;
            const int pagesRight = 2;
            // get first page befor ...
            var fromPage = Math.Max(1, currentPage - pageLeft);
            // get last page after ...
            var toPage = Math.Min(Model.PaginationInfo.TotalPages, currentPage + pagesRight);
            if (Model.PaginationInfo.TotalPages - toPage == 1)
            {
                toPage = Model.PaginationInfo.TotalPages;
            }

            if (fromPage > 1)
            {
                // view First page
                <li class="page-item">
                    <a class="page-link" href="#">1</a>
                </li>

                if (fromPage > 2)
                {
                    // view first ...
                    // calculate number page for link ..., it's middle between first page and fromPage
                    var middleNumber = (int) Math.Ceiling((double) (fromPage - 2) / 2) + 1;
                    <li class="page-item">
                        <a class="page-link"
                           asp-area="StoreOwner"
                           asp-controller="Book"
                           asp-action="Index"
                           asp-route-pageNumber="@middleNumber"
                           asp-route-sortOption="@Model.CurrentSort"
                           asp-route-CurrentSearch="@Model.CurrentSearchString"
                           asp-route-FilterOption="@Model.CurrentCategoryFilter">
                            ...
                        </a>
                    </li>
                }
            }


            // view paginator between currentPage
            for (var pageIndex = fromPage; pageIndex <= toPage; pageIndex++)
            {
                <li class="page-item" @Html.Raw(currentPage == pageIndex ? "class=\"page-item active\"" : "")>
                    <a class="page-link"
                       asp-area="StoreOwner"
                       asp-controller="Book"
                       asp-action="Index"
                       asp-route-pageNumber="@pageIndex"
                       asp-route-sortOption="@Model.CurrentSort"
                       asp-route-CurrentSearch="@Model.CurrentSearchString"
                       asp-route-FilterOption="@Model.CurrentCategoryFilter">
                        @pageIndex
                    </a>
                </li>
            }


            // view second ...
            if (toPage < Model.PaginationInfo.TotalPages)
            {
                var middleNumber = (int) Math.Ceiling((double) (Model.PaginationInfo.TotalPages - toPage) / 2) + toPage;
                <li class="page-item">

                    <a class="page-link"
                       asp-area="StoreOwner"
                       asp-controller="Book"
                       asp-action="Index"
                       asp-route-pageNumber="@middleNumber"
                       asp-route-sortOption="@Model.CurrentSort"
                       asp-route-CurrentSearch="@Model.CurrentSearchString"
                       asp-route-FilterOption="@Model.CurrentCategoryFilter">
                        ...
                    </a>
                </li>
                // view last page
                if (toPage < Model.PaginationInfo.TotalPages - 1)
                {
                    <li class="page-item">
                        <a class="page-link"
                           asp-area="StoreOwner"
                           asp-controller="Book"
                           asp-action="Index"
                           asp-route-pageNumber="@Model.PaginationInfo.TotalPages"
                           asp-route-sortOption="@Model.CurrentSort"
                           asp-route-CurrentSearch="@Model.CurrentSearchString"
                           asp-route-FilterOption="@Model.CurrentCategoryFilter">
                            @Model.PaginationInfo.TotalPages
                        </a>
                    </li>
                }
            }

        }


        @if (currentPage < Model.PaginationInfo.TotalPages)
        {
            <a class="page-link"
               asp-area="StoreOwner"
               asp-controller="Book"
               asp-action="Index"
               asp-rotue-sortOption="@Model.CurrentSort"
               asp-route-pageNumber="@(currentPage + 1)"
               asp-route-CurrentSearch="@Model.CurrentSearchString"
               asp-route-FilterOption="@Model.CurrentCategoryFilter">

                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        }
    </ul>
</nav>

@section Scripts
{
    let select = document.getElementById("categorySelect");
    select.options.selectedIndex = 2;
}